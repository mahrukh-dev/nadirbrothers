{"ast":null,"code":"import axios from \"axios\";\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5000/api\",\n  timeout: 10000\n});\n\n// Add request interceptor for debugging\nAPI.interceptors.request.use(config => {\n  console.log(\"üîÑ Making request to:\", config.baseURL + config.url);\n  console.log(\"üîÑ Request method:\", config.method);\n  return config;\n}, error => {\n  console.error(\"‚ùå Request error:\", error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for error handling\nAPI.interceptors.response.use(response => {\n  console.log(\"‚úÖ Response received:\", response.status, response.data);\n  return response;\n}, error => {\n  var _error$response, _error$response2;\n  console.error(\"‚ùå API Error:\", error);\n  console.error(\"‚ùå Error details:\", {\n    message: error.message,\n    code: error.code,\n    response: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data,\n    status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status\n  });\n  if (error.code === \"ERR_NETWORK\") {\n    console.error(\"üîç Network Error: Make sure your backend server is running on http://localhost:5000\");\n  }\n  return Promise.reject(error);\n});\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","process","env","REACT_APP_API_URL","timeout","interceptors","request","use","config","console","log","url","method","error","Promise","reject","response","status","data","_error$response","_error$response2","message","code"],"sources":["C:/Users/HP/Desktop/Project/client/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5000/api\",\r\n  timeout: 10000,\r\n});\r\n\r\n// Add request interceptor for debugging\r\nAPI.interceptors.request.use(\r\n  (config) => {\r\n    console.log(\"üîÑ Making request to:\", config.baseURL + config.url);\r\n    console.log(\"üîÑ Request method:\", config.method);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error(\"‚ùå Request error:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor for error handling\r\nAPI.interceptors.response.use(\r\n  (response) => {\r\n    console.log(\"‚úÖ Response received:\", response.status, response.data);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error(\"‚ùå API Error:\", error);\r\n    console.error(\"‚ùå Error details:\", {\r\n      message: error.message,\r\n      code: error.code,\r\n      response: error.response?.data,\r\n      status: error.response?.status,\r\n    });\r\n\r\n    if (error.code === \"ERR_NETWORK\") {\r\n      console.error(\r\n        \"üîç Network Error: Make sure your backend server is running on http://localhost:5000\"\r\n      );\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default API;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACVC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,MAAM,CAACR,OAAO,GAAGQ,MAAM,CAACG,GAAG,CAAC;EACjEF,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,MAAM,CAACI,MAAM,CAAC;EAChD,OAAOJ,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACTJ,OAAO,CAACI,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;EACxC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAf,GAAG,CAACO,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAK;EACZP,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEM,QAAQ,CAACC,MAAM,EAAED,QAAQ,CAACE,IAAI,CAAC;EACnE,OAAOF,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAM,eAAA,EAAAC,gBAAA;EACTX,OAAO,CAACI,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;EACpCJ,OAAO,CAACI,KAAK,CAAC,kBAAkB,EAAE;IAChCQ,OAAO,EAAER,KAAK,CAACQ,OAAO;IACtBC,IAAI,EAAET,KAAK,CAACS,IAAI;IAChBN,QAAQ,GAAAG,eAAA,GAAEN,KAAK,CAACG,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBD,IAAI;IAC9BD,MAAM,GAAAG,gBAAA,GAAEP,KAAK,CAACG,QAAQ,cAAAI,gBAAA,uBAAdA,gBAAA,CAAgBH;EAC1B,CAAC,CAAC;EAEF,IAAIJ,KAAK,CAACS,IAAI,KAAK,aAAa,EAAE;IAChCb,OAAO,CAACI,KAAK,CACX,qFACF,CAAC;EACH;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}